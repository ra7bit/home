<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Picture', 'doctrine');

/**
 * BasePicture
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $name
 * @property string $src
 * @property integer $isidea
 * @property integer $classify_id
 * @property integer $style_id
 * @property integer $city_id
 * @property integer $active
 * @property City $City
 * @property Style $Style
 * @property Classify $Classify
 * @property Doctrine_Collection $UserPicture
 * 
 * @method integer             getId()          Returns the current record's "id" value
 * @method string              getName()        Returns the current record's "name" value
 * @method string              getSrc()         Returns the current record's "src" value
 * @method integer             getIsidea()      Returns the current record's "isidea" value
 * @method integer             getClassifyId()  Returns the current record's "classify_id" value
 * @method integer             getStyleId()     Returns the current record's "style_id" value
 * @method integer             getCityId()      Returns the current record's "city_id" value
 * @method integer             getActive()      Returns the current record's "active" value
 * @method City                getCity()        Returns the current record's "City" value
 * @method Style               getStyle()       Returns the current record's "Style" value
 * @method Classify            getClassify()    Returns the current record's "Classify" value
 * @method Doctrine_Collection getUserPicture() Returns the current record's "UserPicture" collection
 * @method Picture             setId()          Sets the current record's "id" value
 * @method Picture             setName()        Sets the current record's "name" value
 * @method Picture             setSrc()         Sets the current record's "src" value
 * @method Picture             setIsidea()      Sets the current record's "isidea" value
 * @method Picture             setClassifyId()  Sets the current record's "classify_id" value
 * @method Picture             setStyleId()     Sets the current record's "style_id" value
 * @method Picture             setCityId()      Sets the current record's "city_id" value
 * @method Picture             setActive()      Sets the current record's "active" value
 * @method Picture             setCity()        Sets the current record's "City" value
 * @method Picture             setStyle()       Sets the current record's "Style" value
 * @method Picture             setClassify()    Sets the current record's "Classify" value
 * @method Picture             setUserPicture() Sets the current record's "UserPicture" collection
 * 
 * @package    home
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BasePicture extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('picture');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => true,
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('name', 'string', 500, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 500,
             ));
        $this->hasColumn('src', 'string', 500, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 500,
             ));
        $this->hasColumn('isidea', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => true,
             'primary' => false,
             'default' => '0',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('classify_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => true,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('style_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => true,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('city_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => true,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('active', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => true,
             'primary' => false,
             'default' => '1',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 1,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('City', array(
             'local' => 'city_id',
             'foreign' => 'id'));

        $this->hasOne('Style', array(
             'local' => 'style_id',
             'foreign' => 'id'));

        $this->hasOne('Classify', array(
             'local' => 'classify_id',
             'foreign' => 'id'));

        $this->hasMany('UserPicture', array(
             'local' => 'id',
             'foreign' => 'picture_id'));
    }
}